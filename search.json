[
    {
        "title": "EasyDocument 文档中心",
        "path": "README.md",
        "content": "EasyDocument 文档中心 欢迎使用 EasyDocument 文档系统。这是一个轻量级、免编译的纯静态前端文档系统，可以帮助您快速构建结构化的文档网站。 系统特点 - **简单易用**: 只需将 Markdown 或 HTML 文件添加到数据目录中 - **自动生成**: 系统会自动识别文档文件并构建导航结构 - **响应式设计**: 兼容各种设备尺寸，从手机到桌面电脑 - **现代界面...",
        "keywords": [
            "easydocument",
            "markdown",
            "html",
            "完全支持",
            "数学公式",
            "通过",
            "支持",
            "图表",
            "文档中心",
            "欢迎使用"
        ]
    },
    {
        "title": "快速入门",
        "path": "快速入门/README.md",
        "content": "快速入门 在本节中，您将了解如何快速开始使用 EasyDocument 构建您自己的文档网站。 系统要求 EasyDocument 是一个纯前端静态系统，几乎没有特殊的系统要求： - 支持现代浏览器（Chrome, Firefox, Safari, Edge的最新版本） - 不需要服务器支持，可以在本地直接打开使用 - 无需数据库或其他后端服务 安装步骤 1. 从 GitHub 下载或克隆仓库： ...",
        "keywords": [
            "easydocument",
            "github",
            "html",
            "快速入门",
            "在本节中",
            "您将了解如何快速开始使用",
            "构建您自己的文档网站",
            "系统要求",
            "是一个纯前端静态系统",
            "几乎没有特殊的系统要求"
        ]
    },
    {
        "title": "Markdown语法指南",
        "path": "快速入门/Markdown语法.md",
        "content": "Markdown语法指南 Markdown 是一种轻量级标记语言，创建于2004年，目标是让文字内容的格式标记语法能够更易读易写。EasyDocument 完全支持标准的 Markdown 语法，本文将为您介绍常用的 Markdown 语法元素。 标题 Markdown 使用 符号来表示标题，不同数量的 代表不同级别的标题： 段落与换行 在 Markdown 中，段落由一个或多个空行分隔。如果要在...",
        "keywords": [
            "markdown",
            "效果如下",
            "内容",
            "使用",
            "markdown语法指南",
            "是一种轻量级标记语言",
            "创建于2004年",
            "目标是让文字内容的格式标记语法能够更易读易写",
            "easydocument",
            "完全支持标准的"
        ]
    },
    {
        "title": "使用指南",
        "path": "使用指南/README.md",
        "content": "使用指南 本节包含 EasyDocument 的详细使用说明，从基础功能到高级特性，帮助您充分利用本文档系统。 内容导航 - **基本使用流程**: 从零开始使用 EasyDocument 的完整步骤 - **文档编写规范**: 编写文档的最佳实践和规范 - **文档内链接**: 如何在文档间创建链接和引用 文档创建流程 使用 EasyDocument 创建文档非常简单，只需以下几个步骤： 1. ...",
        "keywords": [
            "easydocument",
            "html",
            "基本使用流程",
            "使用",
            "markdown",
            "使用指南",
            "本节包含",
            "的详细使用说明",
            "从基础功能到高级特性",
            "帮助您充分利用本文档系统"
        ]
    },
    {
        "title": "基本使用流程",
        "path": "使用指南/基本使用流程.md",
        "content": "基本使用流程 本文档将指导您从零开始使用 EasyDocument 创建自己的文档网站。按照以下步骤，您可以快速上手并开始构建自己的文档系统。 系统要求 - 支持任何现代浏览器（Chrome、Firefox、Safari、Edge 的最新版本） - 不需要任何服务器环境，纯静态文件部署 - 任何文本编辑器（推荐使用支持 Markdown 的编辑器如 VS Code） 安装步骤 1. **获取 Ea...",
        "keywords": [
            "easydocument",
            "markdown",
            "文件",
            "github",
            "例如",
            "通过",
            "基本使用流程",
            "本文档将指导您从零开始使用",
            "创建自己的文档网站",
            "按照以下步骤"
        ]
    },
    {
        "title": "文档内链接",
        "path": "使用指南/文档内链接.md",
        "content": "文档内链接 在 EasyDocument 系统中，合理使用链接可以增强文档的导航性和可用性。本文档介绍如何在文档中创建各种类型的链接。 链接语法 EasyDocument 使用特殊的链接语法来确保正确导航到其他文档。基本语法如下： 其中： - - 显示给用户的可点击文本 - - 目标文档相对于 目录的路径 根目录参数（root参数） EasyDocument 支持使用 参数限制导航的范围，只显示指...",
        "keywords": [
            "easydocument",
            "目录的路径",
            "文件",
            "id",
            "文档内链接",
            "系统中",
            "合理使用链接可以增强文档的导航性和可用性",
            "本文档介绍如何在文档中创建各种类型的链接",
            "链接语法",
            "使用特殊的链接语法来确保正确导航到其他文档"
        ]
    },
    {
        "title": "文档编写规范",
        "path": "使用指南/文档编写规范.md",
        "content": "文档编写规范 本文档提供了在 EasyDocument 系统中编写高质量文档的规范和建议。遵循这些规范可以使您的文档结构清晰、易于阅读和维护。 文件组织 目录结构 - 按照**逻辑层次**组织文件和目录，而不是按照时间或其他非内容相关因素 - 为每个主要分类创建单独的目录 - 在每个目录下创建 作为该目录的介绍或概述 - 尽量避免创建过多层级的嵌套目录（建议不超过 3-4 层） 文件命名 - 使用...",
        "keywords": [
            "使用",
            "markdown",
            "easydocument",
            "语法",
            "文档编写规范",
            "本文档提供了在",
            "系统中编写高质量文档的规范和建议",
            "遵循这些规范可以使您的文档结构清晰",
            "易于阅读和维护",
            "文件组织"
        ]
    },
    {
        "title": "构建工具与搜索功能",
        "path": "使用指南/构建工具与搜索功能.md",
        "content": "构建工具与搜索功能 本文档介绍 EasyDocument 系统中的构建工具和搜索功能的使用方法。 构建工具 (build.py) EasyDocument 提供了一个功能强大的 Python 构建工具 ，用于自动扫描文档目录并生成路径文件和搜索索引。该工具还支持收集Git版本控制信息并与GitHub集成。 基本用法 可用选项 | 选项 | 说明 | |------|------| | | 指定文档...",
        "keywords": [
            "默认",
            "easydocument",
            "构建工具",
            "json",
            "api查询",
            "合并模式",
            "构建工具与搜索功能",
            "本文档介绍",
            "系统中的构建工具和搜索功能的使用方法",
            "build"
        ]
    },
    {
        "title": "示例与模板",
        "path": "示例与模板/README.md",
        "content": "示例与模板 本节提供了HTML模板，帮助您快速开始使用 EasyDocument 创建漂亮的文档。 使用说明 这些模板设计用于复制和修改，以满足您的特定需求： 1. 选择适合您文档类型的模板 2. 复制模板内容到您的新文档中 3. 根据您的需求修改内容 4. 保留模板的结构和格式，以确保一致性 自定义提示 虽然使用模板可以确保文档的一致性，但您也可以根据项目的特定需求进行合理的调整： - 调整标题...",
        "keywords": [
            "示例与模板",
            "本节提供了html模板",
            "帮助您快速开始使用",
            "easydocument",
            "创建漂亮的文档",
            "使用说明",
            "这些模板设计用于复制和修改",
            "以满足您的特定需求",
            "选择适合您文档类型的模板",
            "复制模板内容到您的新文档中"
        ]
    },
    {
        "title": "美化文档示例 - EasyDocument",
        "path": "示例与模板/美化文档示例.html",
        "content": "美化文档示例 - EasyDocument HTML 增强的美化文档示例 这个文档展示了如何使用 HTML 和 CSS 在 EasyDocument 中创建美观、交互式的文档页面，提升阅读体验。 HTML 增强的优势 虽然 Markdown 提供了简洁的语法来编写文档，但有时候我们需要更多的格式控制和交互功能。HTML 可以帮助我们实现这些高级需求。 自定义样式 使用 CSS 可以完全控制文档的外...",
        "keywords": [
            "html",
            "easydocument",
            "config",
            "css",
            "markdown",
            "js",
            "美化文档示例",
            "增强的美化文档示例",
            "这个文档展示了如何使用",
            "中创建美观"
        ]
    },
    {
        "title": "配置详解",
        "path": "配置详解/README.md",
        "content": "配置详解 本节详细介绍 EasyDocument 系统的配置选项。通过调整 文件，您可以自定义网站的外观、行为和功能，以满足您的特定需求。 配置文件路径 配置文件位于项目根目录下的 。这是一个标准的 JavaScript 模块，导出一个包含所有配置选项的对象。 配置文件示例 以下是完整的 文件示例，包含所有可用选项及其默认值： 配置修改方法 要修改配置，请按照以下步骤操作： 1. 打开项目根目录下...",
        "keywords": [
            "文件",
            "javascript",
            "配置详解",
            "本节详细介绍",
            "easydocument",
            "系统的配置选项",
            "通过调整",
            "您可以自定义网站的外观",
            "行为和功能",
            "以满足您的特定需求"
        ]
    },
    {
        "title": "外观设置",
        "path": "配置详解/外观设置.md",
        "content": "外观设置 外观设置（）配置项用于自定义 EasyDocument 文档系统的视觉外观，包括 Logo、图标、颜色、字体等。 可用配置项 | 配置项 | 类型 | 默认值 | 说明 | |-------|------|-------|------| | | 字符串 | | 网站 Logo 的图片路径 | | | 字符串 | | 浏览器标签页图标路径 | | | 字符串 | | 主题颜色，影响链接、按...",
        "keywords": [
            "字符串",
            "类型",
            "默认值",
            "logo",
            "示例",
            "css",
            "外观设置",
            "网站",
            "主题颜色",
            "全局字体设置"
        ]
    },
    {
        "title": "path.json 结构与手动编写",
        "path": "配置详解/path-json结构.md",
        "content": "path.json 结构与手动编写 本文档详细说明 EasyDocument 系统中 文件的结构及如何手动编辑它。虽然 EasyDocument 提供了 脚本来自动生成 ，但在某些情况下，手动编辑可以提供更精确的控制，例如自定义文档排序或添加特殊导航结构。 path.json 的作用 是 EasyDocument 系统的核心配置文件之一，它定义了: 1. 文档的层级结构 2. 导航菜单的显示顺序 ...",
        "keywords": [
            "json",
            "easydocument",
            "数组",
            "path",
            "字符串",
            "属性",
            "结构与手动编写",
            "本文档详细说明",
            "系统中",
            "文件的结构及如何手动编辑它"
        ]
    },
    {
        "title": "GitHub与Git功能配置",
        "path": "配置详解/GitHub与Git功能.md",
        "content": "GitHub与Git功能配置 EasyDocument系统内置了GitHub与Git集成功能，可以显示文档的贡献者信息、最后修改时间以及提供一键编辑链接。本文档将详细介绍如何配置和使用这些功能。 功能概述 EasyDocument的GitHub与Git集成功能主要包括： 1. **贡献者显示**：在文档页面底部显示所有参与编写和修改该文档的贡献者 2. **最后修改时间**：显示文档最后一次被修改...",
        "keywords": [
            "类型",
            "默认值",
            "说明",
            "示例",
            "布尔值",
            "enable",
            "字符串",
            "github与git功能配置",
            "easydocument系统内置了github与git集成功能",
            "可以显示文档的贡献者信息"
        ]
    }
]