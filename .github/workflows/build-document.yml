name: Build Document

on:
  push:
    paths:
      - 'data/**'  # 当data目录下的任何文件发生变化时触发
    branches:
      - main  # 仅在main分支上触发
  workflow_dispatch:  # 支持手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 需要写入权限来提交文件

    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整历史记录，以便Git功能正常工作

      - name: 设置Python环境
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install gitpython
          # 如果有其他依赖，请在这里添加

      - name: 运行build.py脚本
        run: |
          python build.py --merge
          # 添加--merge参数保留现有结构
          # 不添加--no-git参数以启用Git功能
          # 不添加--no-github参数以启用GitHub功能

      - name: 检查是否有更改
        id: check_changes
        run: |
          if [[ -n $(git status -s | grep 'path.json\|search.json') ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi

      - name: 配置Git
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: 提交更改
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git add path.json search.json
          git commit -m "自动更新文档索引 [skip ci]"
          # [skip ci] 标记避免再次触发工作流

      - name: 推送更改
        if: steps.check_changes.outputs.changes == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }} 